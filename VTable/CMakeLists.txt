cmake_minimum_required(VERSION 3.10.2)
project(VTable)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED on)
#set(CMAKE_VERBOSE_MAKEFILE ON)
find_path(MAIN_PATH VTable)
#set(CMAKE_CXX_COMPILER "${GCC_PATH}/g++")
#message("CMAKE_CXX_COMPILER = ${CMAKE_CXX_COMPILER}")
set(CMAKE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
# example how to set c++ compiler flags for GNU
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g")
set(CMAKE_CXX_FLAGS_RELEASE "-O2")
enable_language(ASM)
set(SOURCE_FILES src/main.cpp src/Grandparent.cpp src/Parent1.cpp src/Parent2.cpp src/Child.cpp)
add_executable(VTable main.cpp VBasicUnderstand/NonVirtualClass.cpp VBasicUnderstand/VirtualClass.cpp Multiple_Inheritance/Mother.cpp Multiple_Inheritance/Father.cpp Multiple_Inheritance/Child.cpp)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -std=c++11 -Wall -Wno-unused-variable -Wint-to-pointer-cast  -o main.cpp")